services:
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 5s
      retries: 30
      start_period: 1s
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    restart: always
    ports:
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 10s
      retries: 30
      start_period: 15s
  postgres:
    container_name: postgres
    image: postgres:15.1-alpine
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ../.env
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -d postgres' || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 3s
  app:
    container_name: app
    restart: always
    build:
      context: ../.
    env_file:
      - ../.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
  celery:
    container_name: celery
    restart: always
    build:
      context: ../.
    env_file:
      - ../.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: celery -A app.application.synchronizer.worker.main worker -l info
  beat:
    container_name: beat
    restart: always
    build:
      context: ../.
    env_file:
      - ../.env
    depends_on:
      - celery
    command: celery -A app.application.synchronizer.worker.main beat
